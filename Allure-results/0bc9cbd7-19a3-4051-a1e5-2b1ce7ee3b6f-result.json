{"name": "test_search_user_params_005[getDataForSearchUser3]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\n  (Session info: chrome=131.0.6778.109)\nStacktrace:\n\tGetHandleVerifier [0x00007FF629836CF5+28821]\n\t(No symbol) [0x00007FF6297A3880]\n\t(No symbol) [0x00007FF62964578A]\n\t(No symbol) [0x00007FF629642E88]\n\t(No symbol) [0x00007FF629633BF9]\n\t(No symbol) [0x00007FF62963594F]\n\t(No symbol) [0x00007FF629633EBF]\n\t(No symbol) [0x00007FF62963371B]\n\t(No symbol) [0x00007FF62963365A]\n\t(No symbol) [0x00007FF629631274]\n\t(No symbol) [0x00007FF629631B3C]\n\t(No symbol) [0x00007FF62964885A]\n\t(No symbol) [0x00007FF6296E01FE]\n\t(No symbol) [0x00007FF6296BF2FA]\n\t(No symbol) [0x00007FF6296DF412]\n\t(No symbol) [0x00007FF6296BF0A3]\n\t(No symbol) [0x00007FF62968A778]\n\t(No symbol) [0x00007FF62968B8E1]\n\tGetHandleVerifier [0x00007FF629B6FCED+3408013]\n\tGetHandleVerifier [0x00007FF629B8745F+3504127]\n\tGetHandleVerifier [0x00007FF629B7B63D+3455453]\n\tGetHandleVerifier [0x00007FF6298FBDFB+835995]\n\t(No symbol) [0x00007FF6297AEB9F]\n\t(No symbol) [0x00007FF6297AA854]\n\t(No symbol) [0x00007FF6297AA9ED]\n\t(No symbol) [0x00007FF62979A1D9]\n\tBaseThreadInitThunk [0x00007FFE76E27374+20]\n\tRtlUserThreadStart [0x00007FFE7723CC91+33]", "trace": "request = <SubRequest 'setup' for <Function test_search_user_params_005[getDataForSearchUser3]>>\n\n    @pytest.fixture()\n    def setup(request):\n        browser = request.config.getoption(\"--browser\")\n        if browser == \"chrome\":\n            driver = webdriver.Chrome()\n        elif browser == \"firefox\":\n            driver = webdriver.Firefox()\n        elif browser == \"edge\":\n            driver = webdriver.Edge()\n    \n        else:\n            driver = webdriver.Chrome()\n            #driver = webdriver.Chrome(options=chrome_options)\n>       driver.get(\"https://bankapp.credence.in/\")\n\ntestCases\\conftest.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:393: in get\n    self.execute(Command.GET, {\"url\": url})\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000020B3D7889E0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_NAME_NOT_RESOLVED\\\\n  (...07FF62979A1D9]\\\\n\\\\tBaseThreadInitThunk [0x00007FFE76E27374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFE7723CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_NAME_NOT_RESOLVED\nE         (Session info: chrome=131.0.6778.109)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF629836CF5+28821]\nE       \t(No symbol) [0x00007FF6297A3880]\nE       \t(No symbol) [0x00007FF62964578A]\nE       \t(No symbol) [0x00007FF629642E88]\nE       \t(No symbol) [0x00007FF629633BF9]\nE       \t(No symbol) [0x00007FF62963594F]\nE       \t(No symbol) [0x00007FF629633EBF]\nE       \t(No symbol) [0x00007FF62963371B]\nE       \t(No symbol) [0x00007FF62963365A]\nE       \t(No symbol) [0x00007FF629631274]\nE       \t(No symbol) [0x00007FF629631B3C]\nE       \t(No symbol) [0x00007FF62964885A]\nE       \t(No symbol) [0x00007FF6296E01FE]\nE       \t(No symbol) [0x00007FF6296BF2FA]\nE       \t(No symbol) [0x00007FF6296DF412]\nE       \t(No symbol) [0x00007FF6296BF0A3]\nE       \t(No symbol) [0x00007FF62968A778]\nE       \t(No symbol) [0x00007FF62968B8E1]\nE       \tGetHandleVerifier [0x00007FF629B6FCED+3408013]\nE       \tGetHandleVerifier [0x00007FF629B8745F+3504127]\nE       \tGetHandleVerifier [0x00007FF629B7B63D+3455453]\nE       \tGetHandleVerifier [0x00007FF6298FBDFB+835995]\nE       \t(No symbol) [0x00007FF6297AEB9F]\nE       \t(No symbol) [0x00007FF6297AA854]\nE       \t(No symbol) [0x00007FF6297AA9ED]\nE       \t(No symbol) [0x00007FF62979A1D9]\nE       \tBaseThreadInitThunk [0x00007FFE76E27374+20]\nE       \tRtlUserThreadStart [0x00007FFE7723CC91+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException"}, "parameters": [{"name": "getDataForSearchUser", "value": "('demo2', 'pass')"}], "start": 1733804392228, "stop": 1733804392228, "uuid": "adad78d3-5601-45d7-957e-a016d4bee14e", "historyId": "1b4960b444f0add667d838c4e4955de2", "testCaseId": "4b257e13a6d67d8318a1d9aca6b61c73", "fullName": "testCases.test_Search_User_params.Test_Search_User_params#test_search_user_params_005", "labels": [{"name": "tag", "value": "group2"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_Search_User_params"}, {"name": "subSuite", "value": "Test_Search_User_params"}, {"name": "host", "value": "Credence-Pc"}, {"name": "thread", "value": "31060-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_Search_User_params"}]}